{"ast":null,"code":"import { GET_TICKETS, GET_TICKET, CREATE_TICKET, UPDATE_TICKET, TICKET_ERROR } from \"../types\";\nconst initialState = {\n  tickets: [],\n  currentTicket: null,\n  error: null,\n  loading: true\n};\nexport default function ticketReducer(state = initialState, action) {\n  const {\n    type,\n    payload\n  } = action;\n  switch (type) {\n    case GET_TICKETS:\n      return {\n        ...state,\n        tickets: payload,\n        loading: false\n      };\n    case GET_TICKET:\n      return {\n        ...state,\n        currentTicket: payload,\n        loading: false\n      };\n    case CREATE_TICKET:\n      return {\n        ...state,\n        tickets: [payload, ...state.tickets],\n        loading: false\n      };\n    case UPDATE_TICKET:\n      return {\n        ...state,\n        tickets: state.tickets.map(ticket => ticket._id === payload._id ? payload : ticket),\n        loading: false\n      };\n    case TICKET_ERROR:\n      return {\n        ...state,\n        error: payload,\n        loading: false\n      };\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["GET_TICKETS","GET_TICKET","CREATE_TICKET","UPDATE_TICKET","TICKET_ERROR","initialState","tickets","currentTicket","error","loading","ticketReducer","state","action","type","payload","map","ticket","_id"],"sources":["C:/Users/MO/Desktop/New folder (2)/client/src/redux/reducers/ticketReducer.js"],"sourcesContent":["import {\r\n  GET_TICKETS,\r\n  GET_TICKET,\r\n  CREATE_TICKET,\r\n  UPDATE_TICKET,\r\n  TICKET_ERROR,\r\n} from \"../types\";\r\n\r\nconst initialState = {\r\n  tickets: [],\r\n  currentTicket: null,\r\n  error: null,\r\n  loading: true,\r\n};\r\n\r\nexport default function ticketReducer(state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case GET_TICKETS:\r\n      return {\r\n        ...state,\r\n        tickets: payload,\r\n        loading: false,\r\n      };\r\n\r\n    case GET_TICKET:\r\n      return {\r\n        ...state,\r\n        currentTicket: payload,\r\n        loading: false,\r\n      };\r\n\r\n    case CREATE_TICKET:\r\n      return {\r\n        ...state,\r\n        tickets: [payload, ...state.tickets],\r\n        loading: false,\r\n      };\r\n\r\n    case UPDATE_TICKET:\r\n      return {\r\n        ...state,\r\n        tickets: state.tickets.map((ticket) =>\r\n          ticket._id === payload._id ? payload : ticket\r\n        ),\r\n        loading: false,\r\n      };\r\n\r\n    case TICKET_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload,\r\n        loading: false,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n"],"mappings":"AAAA,SACEA,WAAW,EACXC,UAAU,EACVC,aAAa,EACbC,aAAa,EACbC,YAAY,QACP,UAAU;AAEjB,MAAMC,YAAY,GAAG;EACnBC,OAAO,EAAE,EAAE;EACXC,aAAa,EAAE,IAAI;EACnBC,KAAK,EAAE,IAAI;EACXC,OAAO,EAAE;AACX,CAAC;AAED,eAAe,SAASC,aAAaA,CAACC,KAAK,GAAGN,YAAY,EAAEO,MAAM,EAAE;EAClE,MAAM;IAAEC,IAAI;IAAEC;EAAQ,CAAC,GAAGF,MAAM;EAEhC,QAAQC,IAAI;IACV,KAAKb,WAAW;MACd,OAAO;QACL,GAAGW,KAAK;QACRL,OAAO,EAAEQ,OAAO;QAChBL,OAAO,EAAE;MACX,CAAC;IAEH,KAAKR,UAAU;MACb,OAAO;QACL,GAAGU,KAAK;QACRJ,aAAa,EAAEO,OAAO;QACtBL,OAAO,EAAE;MACX,CAAC;IAEH,KAAKP,aAAa;MAChB,OAAO;QACL,GAAGS,KAAK;QACRL,OAAO,EAAE,CAACQ,OAAO,EAAE,GAAGH,KAAK,CAACL,OAAO,CAAC;QACpCG,OAAO,EAAE;MACX,CAAC;IAEH,KAAKN,aAAa;MAChB,OAAO;QACL,GAAGQ,KAAK;QACRL,OAAO,EAAEK,KAAK,CAACL,OAAO,CAACS,GAAG,CAAEC,MAAM,IAChCA,MAAM,CAACC,GAAG,KAAKH,OAAO,CAACG,GAAG,GAAGH,OAAO,GAAGE,MACzC,CAAC;QACDP,OAAO,EAAE;MACX,CAAC;IAEH,KAAKL,YAAY;MACf,OAAO;QACL,GAAGO,KAAK;QACRH,KAAK,EAAEM,OAAO;QACdL,OAAO,EAAE;MACX,CAAC;IAEH;MACE,OAAOE,KAAK;EAChB;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}