{"ast":null,"code":"import axios from \"axios\";\nimport { GET_TICKETS, GET_TICKET, CREATE_TICKET, UPDATE_TICKET, TICKET_ERROR } from \"../types\";\nconst API_URL = \"http://localhost:4000/api\";\n\n// Setup axios config with token\nconst getConfig = () => {\n  const token = localStorage.getItem(\"token\");\n  return {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  };\n};\nexport const getTickets = () => async dispatch => {\n  try {\n    const res = await axios.get(`${API_URL}/tickets`, getConfig());\n    dispatch({\n      type: GET_TICKETS,\n      payload: res.data\n    });\n  } catch (err) {\n    var _err$response, _err$response$data;\n    dispatch({\n      type: TICKET_ERROR,\n      payload: ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || \"Error fetching tickets\"\n    });\n  }\n};\nexport const getTicket = id => async dispatch => {\n  try {\n    const res = await axios.get(`${API_URL}/tickets/${id}`, getConfig());\n    dispatch({\n      type: GET_TICKET,\n      payload: res.data\n    });\n  } catch (err) {\n    var _err$response2, _err$response2$data;\n    dispatch({\n      type: TICKET_ERROR,\n      payload: ((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.error) || \"Error fetching ticket\"\n    });\n  }\n};\nexport const createTicket = ticketData => async dispatch => {\n  try {\n    const res = await axios.post(`${API_URL}/tickets`, ticketData, getConfig());\n    dispatch({\n      type: CREATE_TICKET,\n      payload: res.data\n    });\n    return res.data;\n  } catch (err) {\n    var _err$response3, _err$response3$data;\n    dispatch({\n      type: TICKET_ERROR,\n      payload: ((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.error) || \"Error creating ticket\"\n    });\n    throw err;\n  }\n};\nexport const updateTicketStatus = (id, status) => async dispatch => {\n  try {\n    const res = await axios.put(`${API_URL}/tickets/${id}`, {\n      status\n    }, getConfig());\n    dispatch({\n      type: UPDATE_TICKET,\n      payload: res.data\n    });\n    return res.data;\n  } catch (err) {\n    var _err$response4, _err$response4$data;\n    dispatch({\n      type: TICKET_ERROR,\n      payload: ((_err$response4 = err.response) === null || _err$response4 === void 0 ? void 0 : (_err$response4$data = _err$response4.data) === null || _err$response4$data === void 0 ? void 0 : _err$response4$data.error) || \"Error updating ticket\"\n    });\n    throw err;\n  }\n};","map":{"version":3,"names":["axios","GET_TICKETS","GET_TICKET","CREATE_TICKET","UPDATE_TICKET","TICKET_ERROR","API_URL","getConfig","token","localStorage","getItem","headers","Authorization","getTickets","dispatch","res","get","type","payload","data","err","_err$response","_err$response$data","response","error","getTicket","id","_err$response2","_err$response2$data","createTicket","ticketData","post","_err$response3","_err$response3$data","updateTicketStatus","status","put","_err$response4","_err$response4$data"],"sources":["C:/Users/MO/Desktop/New folder (2)/client/src/redux/actions/ticketActions.js"],"sourcesContent":["import axios from \"axios\";\r\nimport {\r\n  GET_TICKETS,\r\n  GET_TICKET,\r\n  CREATE_TICKET,\r\n  UPDATE_TICKET,\r\n  TICKET_ERROR,\r\n} from \"../types\";\r\n\r\nconst API_URL = \"http://localhost:4000/api\";\r\n\r\n// Setup axios config with token\r\nconst getConfig = () => {\r\n  const token = localStorage.getItem(\"token\");\r\n  return {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  };\r\n};\r\n\r\nexport const getTickets = () => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`${API_URL}/tickets`, getConfig());\r\n\r\n    dispatch({\r\n      type: GET_TICKETS,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: TICKET_ERROR,\r\n      payload: err.response?.data?.error || \"Error fetching tickets\",\r\n    });\r\n  }\r\n};\r\n\r\nexport const getTicket = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`${API_URL}/tickets/${id}`, getConfig());\r\n\r\n    dispatch({\r\n      type: GET_TICKET,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: TICKET_ERROR,\r\n      payload: err.response?.data?.error || \"Error fetching ticket\",\r\n    });\r\n  }\r\n};\r\n\r\nexport const createTicket = (ticketData) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.post(`${API_URL}/tickets`, ticketData, getConfig());\r\n\r\n    dispatch({\r\n      type: CREATE_TICKET,\r\n      payload: res.data,\r\n    });\r\n    return res.data;\r\n  } catch (err) {\r\n    dispatch({\r\n      type: TICKET_ERROR,\r\n      payload: err.response?.data?.error || \"Error creating ticket\",\r\n    });\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const updateTicketStatus = (id, status) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.put(\r\n      `${API_URL}/tickets/${id}`,\r\n      { status },\r\n      getConfig()\r\n    );\r\n\r\n    dispatch({\r\n      type: UPDATE_TICKET,\r\n      payload: res.data,\r\n    });\r\n    return res.data;\r\n  } catch (err) {\r\n    dispatch({\r\n      type: TICKET_ERROR,\r\n      payload: err.response?.data?.error || \"Error updating ticket\",\r\n    });\r\n    throw err;\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}