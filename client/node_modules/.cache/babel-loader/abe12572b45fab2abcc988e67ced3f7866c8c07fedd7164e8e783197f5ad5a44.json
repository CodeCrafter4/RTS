{"ast":null,"code":"import axios from \"axios\";\nimport { GET_TICKETS, GET_TICKET, CREATE_TICKET, UPDATE_TICKET, TICKET_ERROR } from \"../types\";\nconst API_URL = \"http://localhost:4000/api\";\n\n// Setup axios config with token\nconst getConfig = () => {\n  const token = localStorage.getItem(\"token\");\n  return {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  };\n};\n\n// Check user permissions\nconst checkPermission = (user, ticketUserId) => {\n  if (!user) return false;\n  return user.role === \"admin\" || user._id === ticketUserId;\n};\nexport const getTickets = () => async (dispatch, getState) => {\n  try {\n    const res = await axios.get(`${API_URL}/tickets`, getConfig());\n    dispatch({\n      type: GET_TICKETS,\n      payload: res.data\n    });\n  } catch (err) {\n    var _err$response, _err$response$data;\n    dispatch({\n      type: TICKET_ERROR,\n      payload: ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || \"Error fetching tickets\"\n    });\n    throw err;\n  }\n};\nexport const getTicket = id => async (dispatch, getState) => {\n  try {\n    const res = await axios.get(`${API_URL}/tickets/${id}`, getConfig());\n    const {\n      user\n    } = getState().auth;\n    if (!checkPermission(user, res.data.createdBy._id)) {\n      throw new Error(\"Not authorized to view this ticket\");\n    }\n    dispatch({\n      type: GET_TICKET,\n      payload: res.data\n    });\n  } catch (err) {\n    var _err$response2, _err$response2$data;\n    dispatch({\n      type: TICKET_ERROR,\n      payload: ((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.error) || err.message || \"Error fetching ticket\"\n    });\n    throw err;\n  }\n};\nexport const createTicket = ticketData => async dispatch => {\n  try {\n    const res = await axios.post(`${API_URL}/tickets`, ticketData, getConfig());\n    dispatch({\n      type: CREATE_TICKET,\n      payload: res.data\n    });\n    return res.data;\n  } catch (err) {\n    var _err$response3, _err$response3$data;\n    dispatch({\n      type: TICKET_ERROR,\n      payload: ((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.error) || \"Error creating ticket\"\n    });\n    throw err;\n  }\n};\nexport const updateTicketStatus = (id, status) => async (dispatch, getState) => {\n  try {\n    const {\n      user\n    } = getState().auth;\n    if (user.role !== \"admin\") {\n      throw new Error(\"Only admins can update ticket status\");\n    }\n    const res = await axios.put(`${API_URL}/tickets/${id}`, {\n      status\n    }, getConfig());\n    dispatch({\n      type: UPDATE_TICKET,\n      payload: res.data\n    });\n    return res.data;\n  } catch (err) {\n    var _err$response4, _err$response4$data;\n    dispatch({\n      type: TICKET_ERROR,\n      payload: ((_err$response4 = err.response) === null || _err$response4 === void 0 ? void 0 : (_err$response4$data = _err$response4.data) === null || _err$response4$data === void 0 ? void 0 : _err$response4$data.error) || err.message || \"Error updating ticket\"\n    });\n    throw err;\n  }\n};","map":{"version":3,"names":["axios","GET_TICKETS","GET_TICKET","CREATE_TICKET","UPDATE_TICKET","TICKET_ERROR","API_URL","getConfig","token","localStorage","getItem","headers","Authorization","checkPermission","user","ticketUserId","role","_id","getTickets","dispatch","getState","res","get","type","payload","data","err","_err$response","_err$response$data","response","error","getTicket","id","auth","createdBy","Error","_err$response2","_err$response2$data","message","createTicket","ticketData","post","_err$response3","_err$response3$data","updateTicketStatus","status","put","_err$response4","_err$response4$data"],"sources":["C:/Users/MO/Desktop/New folder (2)/client/src/redux/actions/ticketActions.js"],"sourcesContent":["import axios from \"axios\";\r\nimport {\r\n  GET_TICKETS,\r\n  GET_TICKET,\r\n  CREATE_TICKET,\r\n  UPDATE_TICKET,\r\n  TICKET_ERROR,\r\n} from \"../types\";\r\n\r\nconst API_URL = \"http://localhost:4000/api\";\r\n\r\n// Setup axios config with token\r\nconst getConfig = () => {\r\n  const token = localStorage.getItem(\"token\");\r\n  return {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  };\r\n};\r\n\r\n// Check user permissions\r\nconst checkPermission = (user, ticketUserId) => {\r\n  if (!user) return false;\r\n  return user.role === \"admin\" || user._id === ticketUserId;\r\n};\r\n\r\nexport const getTickets = () => async (dispatch, getState) => {\r\n  try {\r\n    const res = await axios.get(`${API_URL}/tickets`, getConfig());\r\n\r\n    dispatch({\r\n      type: GET_TICKETS,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: TICKET_ERROR,\r\n      payload: err.response?.data?.error || \"Error fetching tickets\",\r\n    });\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const getTicket = (id) => async (dispatch, getState) => {\r\n  try {\r\n    const res = await axios.get(`${API_URL}/tickets/${id}`, getConfig());\r\n    const { user } = getState().auth;\r\n\r\n    if (!checkPermission(user, res.data.createdBy._id)) {\r\n      throw new Error(\"Not authorized to view this ticket\");\r\n    }\r\n\r\n    dispatch({\r\n      type: GET_TICKET,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: TICKET_ERROR,\r\n      payload:\r\n        err.response?.data?.error || err.message || \"Error fetching ticket\",\r\n    });\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const createTicket = (ticketData) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.post(`${API_URL}/tickets`, ticketData, getConfig());\r\n\r\n    dispatch({\r\n      type: CREATE_TICKET,\r\n      payload: res.data,\r\n    });\r\n    return res.data;\r\n  } catch (err) {\r\n    dispatch({\r\n      type: TICKET_ERROR,\r\n      payload: err.response?.data?.error || \"Error creating ticket\",\r\n    });\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const updateTicketStatus =\r\n  (id, status) => async (dispatch, getState) => {\r\n    try {\r\n      const { user } = getState().auth;\r\n      if (user.role !== \"admin\") {\r\n        throw new Error(\"Only admins can update ticket status\");\r\n      }\r\n\r\n      const res = await axios.put(\r\n        `${API_URL}/tickets/${id}`,\r\n        { status },\r\n        getConfig()\r\n      );\r\n\r\n      dispatch({\r\n        type: UPDATE_TICKET,\r\n        payload: res.data,\r\n      });\r\n      return res.data;\r\n    } catch (err) {\r\n      dispatch({\r\n        type: TICKET_ERROR,\r\n        payload:\r\n          err.response?.data?.error || err.message || \"Error updating ticket\",\r\n      });\r\n      throw err;\r\n    }\r\n  };\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}